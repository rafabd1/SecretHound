name: Release SecretHound

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
      - name: Build for all platforms
        run: |
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -ldflags "-X github.com/rafabd1/SecretHound/cmd.Version=${{ env.VERSION }}" -o secrethound-${{ env.VERSION }}-windows-amd64.exe ./cmd/secrethound/
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -ldflags "-X github.com/rafabd1/SecretHound/cmd.Version=${{ env.VERSION }}" -o secrethound-${{ env.VERSION }}-linux-amd64 ./cmd/secrethound/
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/rafabd1/SecretHound/cmd.Version=${{ env.VERSION }}" -o secrethound-${{ env.VERSION }}-darwin-amd64 ./cmd/secrethound/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: SecretHound v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            secrethound-${{ env.VERSION }}-windows-amd64.exe
            secrethound-${{ env.VERSION }}-linux-amd64
            secrethound-${{ env.VERSION }}-darwin-amd64
          body: |
                # SecretHound v${{ env.VERSION }}

                ## New Features
                - **Expanded Pattern Library**: Introduced new pattern categories including PII (Personally Identifiable Information) and Web3 (e.g., Ethereum/Bitcoin addresses, private keys), increasing total patterns to over 60.
                - **URL/Domain Extraction Mode**: Added `--scan-urls` flag to exclusively scan for URL and domain patterns, overriding other category filters.
                - **Grouped Output Format**: Introduced `--group-by-source` flag to group found secrets by their source URL/file in TXT and JSON output formats, improving readability for large scans.
                - **Pattern Category Control**: Implemented `--include-categories` and `--exclude-categories` flags to allow users to specify which pattern categories to use or ignore during scans.

                ## Improvements
                - **Enhanced Pattern Accuracy**: Iteratively refined numerous existing patterns (IPv4, Bitcoin Address, Email Address, MAC Address, Generic Domain, Session Token) to significantly reduce false positives and improve detection of legitimate secrets based on extensive real-world test cases.
                - **Log Custom Headers**: Initial configuration log now indicates if custom HTTP headers (`-H`) are being used.
                - **Queue Logic & Rate Limiting**: Improved URL processing queue logic and refined the auto mode for rate limiting for more efficient and considerate scanning.
                - **CLI Options Refinement**: Corrected and improved behavior of `--silent` and `--no-progress` flags.
                - **Regex Engine Compatibility**: Added internal logging for regex compilation errors and refactored incompatible regex syntax (e.g., unsupported lookaheads) to ensure all patterns load correctly with Go's standard regex engine.

                ## Bug Fixes
                - **JSON Output Formatting**: Addressed issues to ensure valid JSON output, especially when no secrets are found or in raw mode.
                - **Progress Bar Rendering**: Fixed a bug where the progress bar would sometimes only update when new logs were printed, ensuring it now refreshes independently and consistently.
                - **Execution Deadlocks**: Resolved potential deadlocks and improved goroutine management for more stable execution during long scans.
                - **Pattern Loading**: Fixed an issue where the incorrect number of loaded patterns was reported when using category filters, ensuring accurate reflection of active patterns.

                ## Installation
                
                Download the appropriate binary for your platform and make it executable.
                
                For Go users:
                ```
                go install github.com/rafabd1/SecretHound/cmd/secrethound@latest
                ```
                
                ## Documentation
                
                See the [documentation](https://github.com/rafabd1/SecretHound/tree/main/docs) for usage details.